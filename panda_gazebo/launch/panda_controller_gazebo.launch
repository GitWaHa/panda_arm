<launch>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->

    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <arg name="with_grasp" default="false"/>
    <arg if="$(arg with_grasp)" name="world_name" value="$(find panda_gazebo)/worlds/panda_with_grasp.world"/>
    <arg unless="$(arg with_grasp)" name="world_name" value="$(find panda_gazebo)/worlds/panda.world"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <arg name="urdf_path" default="$(find panda_description)/urdf/robot_panda_gazebo.urdf"/>
    <param name="robot_description" textfile="$(arg urdf_path)" />
    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <include file="$(find panda_moveit_config)/launch/planning_context.launch">
        <arg name="load_robot_description" value="false"/>
    </include>



    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find panda_gazebo)/config/panda_gazebo_controllers.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller 
        panda_arm_controller
        panda_gripper_controller"/>

    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model pigot -file $(arg urdf_path)"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <!-- <remap from="/joint_states" to="/ROBOT/joint_states" /> -->
    </node>

</launch>